// <auto-generated />
using System;
using ASPVUE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPVUE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220605141700_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ASPVUE.Models.Jurusan", b =>
                {
                    b.Property<int>("JurusanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NamaJurusan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("JurusanID");

                    b.ToTable("Jurusans");
                });

            modelBuilder.Entity("ASPVUE.Models.Kelas", b =>
                {
                    b.Property<int>("KelasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("JurusanID")
                        .HasColumnType("int");

                    b.Property<string>("NamaKelas")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("WaliKelasID")
                        .HasColumnType("int");

                    b.HasKey("KelasID");

                    b.HasIndex("JurusanID");

                    b.HasIndex("WaliKelasID");

                    b.ToTable("Kelass");
                });

            modelBuilder.Entity("ASPVUE.Models.KetuaJurusan", b =>
                {
                    b.Property<int>("KetuaJurusanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NamaKetuaJurusan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("KetuaJurusanID");

                    b.HasIndex("UserID");

                    b.ToTable("KetuaJurusans");
                });

            modelBuilder.Entity("ASPVUE.Models.Siswa", b =>
                {
                    b.Property<int>("SiswaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GambarSiswa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KelassKelasID")
                        .HasColumnType("int");

                    b.Property<string>("NamaSiswa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiswaID");

                    b.HasIndex("KelassKelasID");

                    b.ToTable("Siswas");
                });

            modelBuilder.Entity("ASPVUE.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASPVUE.Models.WaliKelas", b =>
                {
                    b.Property<int>("WaliKelasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NamaWaliKelas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("WaliKelasID");

                    b.HasIndex("UserID");

                    b.ToTable("WaliKelas");
                });

            modelBuilder.Entity("ASPVUE.Models.Kelas", b =>
                {
                    b.HasOne("ASPVUE.Models.Jurusan", "jurusan")
                        .WithMany()
                        .HasForeignKey("JurusanID");

                    b.HasOne("ASPVUE.Models.WaliKelas", "waliKelas")
                        .WithMany()
                        .HasForeignKey("WaliKelasID");

                    b.Navigation("jurusan");

                    b.Navigation("waliKelas");
                });

            modelBuilder.Entity("ASPVUE.Models.KetuaJurusan", b =>
                {
                    b.HasOne("ASPVUE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPVUE.Models.Siswa", b =>
                {
                    b.HasOne("ASPVUE.Models.Kelas", "Kelass")
                        .WithMany()
                        .HasForeignKey("KelassKelasID");

                    b.Navigation("Kelass");
                });

            modelBuilder.Entity("ASPVUE.Models.WaliKelas", b =>
                {
                    b.HasOne("ASPVUE.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
